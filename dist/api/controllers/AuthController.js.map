{"version":3,"sources":["../../../api/controllers/AuthController.js"],"names":["module","exports","login","req","res","email","param","password","verifyParams","User","findOne","then","user","invalidEmailOrPassword","signInUser","catch","err","comparePassword","valid","responseData","token","generateToken","id","ResponseService","json","user_id","JwtService","issue"],"mappings":";;AAAA;;;AAGAA,OAAOC,OAAP,GAAiB;;AAEfC,SAAO,eAAUC,GAAV,EAAeC,GAAf,EAAoB;AACzB,QAAIC,QAAQF,IAAIG,KAAJ,CAAU,OAAV,CAAZ;AACA,QAAIC,WAAWJ,IAAIG,KAAJ,CAAU,UAAV,CAAf;;AAEAE,iBAAaJ,GAAb,EAAkBC,KAAlB,EAAyBE,QAAzB;;AAEAE,SAAKC,OAAL,CAAa,EAACL,OAAOA,KAAR,EAAb,EAA6BM,IAA7B,CAAkC,UAAUC,IAAV,EAAgB;AAChD,UAAI,CAACA,IAAL,EAAW;AACT,eAAOC,uBAAuBT,GAAvB,CAAP;AACD;AACDU,iBAAWX,GAAX,EAAgBC,GAAhB,EAAqBG,QAArB,EAA+BK,IAA/B;AACD,KALD,EAKGG,KALH,CAKS,UAAUC,GAAV,EAAe;AACtB,aAAOH,uBAAuBT,GAAvB,CAAP;AACD,KAPD;AAQD;;AAhBc,CAAjB;;AAqBA,SAASU,UAAT,CAAoBX,GAApB,EAAyBC,GAAzB,EAA8BG,QAA9B,EAAwCK,IAAxC,EAA8C;AAC5CH,OAAKQ,eAAL,CAAqBV,QAArB,EAA+BK,IAA/B,EAAqCD,IAArC,CACE,UAAUO,KAAV,EAAiB;AACf,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,KAAKL,sBAAL,EAAP;AACD,KAFD,MAEO;AACL,UAAIM,eAAe;AACjBP,cAAMA,IADW;AAEjBQ,eAAOC,cAAcT,KAAKU,EAAnB;AAFU,OAAnB;AAIA,aAAOC,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BpB,GAA1B,EAA+B,wBAA/B,EAAyDe,YAAzD,CAAP;AACD;AACF,GAXH,EAYEJ,KAZF,CAYQ,UAAUC,GAAV,EAAe;AACrB,WAAOO,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BpB,GAA1B,EAA+B,WAA/B,CAAP;AACD,GAdD;AAeD;;AAGD,SAASS,sBAAT,CAAgCT,GAAhC,EAAoC;AAClC,SAAOmB,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BpB,GAA1B,EAA+B,2BAA/B,CAAP;AACD;;AAED,SAASI,YAAT,CAAsBJ,GAAtB,EAA2BC,KAA3B,EAAkCE,QAAlC,EAA2C;AACzC,MAAI,CAACF,KAAD,IAAU,CAACE,QAAf,EAAyB;AACvB,WAAOgB,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BpB,GAA1B,EAA+B,6BAA/B,CAAP;AACD;AACF;;AAGD,SAASiB,aAAT,CAAuBI,OAAvB,EAAgC;AAC9B,SAAOC,WAAWC,KAAX,CAAiB,EAACL,IAAIG,OAAL,EAAjB,CAAP;AACD","file":"AuthController.js","sourcesContent":["/**\n * Created by johngoode on 12/17/16.\n */\nmodule.exports = {\n  \n  login: function (req, res) {\n    var email = req.param('email');\n    var password = req.param('password');\n    \n    verifyParams(res, email, password)\n    \n    User.findOne({email: email}).then(function (user) {\n      if (!user) {\n        return invalidEmailOrPassword(res);\n      }\n      signInUser(req, res, password, user)\n    }).catch(function (err) {\n      return invalidEmailOrPassword(res);\n    })\n  }\n  \n};\n\n\nfunction signInUser(req, res, password, user) {\n  User.comparePassword(password, user).then(\n    function (valid) {\n      if (!valid) {\n        return this.invalidEmailOrPassword();\n      } else {\n        var responseData = {\n          user: user,\n          token: generateToken(user.id)\n        }\n        return ResponseService.json(200, res, \"Successfully signed in\", responseData)\n      }\n    }\n  ).catch(function (err) {\n    return ResponseService.json(403, res, \"Forbidden\")\n  })\n};\n\n\nfunction invalidEmailOrPassword(res){\n  return ResponseService.json(401, res, \"Invalid email or password\")\n};\n\nfunction verifyParams(res, email, password){\n  if (!email || !password) {\n    return ResponseService.json(401, res, \"Email and password required\")\n  }\n};\n\n\nfunction generateToken(user_id) {\n  return JwtService.issue({id: user_id})\n};\n"]}