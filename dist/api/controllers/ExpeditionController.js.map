{"version":3,"sources":["../../../api/controllers/ExpeditionController.js"],"names":["module","exports","getCurrent","req","res","id","param","undefined","ResponseService","json","Expedition","query","err","data","responseData","expedition","rows","length","status"],"mappings":";;AAAA;;;;;;;AAOAA,OAAOC,OAAP,GAAiB;AACjB;;;;;;;;;;;;;;AAcEC,cAAY,oBAASC,GAAT,EAAcC,GAAd,EAAmB;;AAE7B,QAAIC,KAAKF,IAAIG,KAAJ,CAAU,QAAV,CAAT;;AAEA,QAAID,OAAOE,SAAP,IAAoBF,OAAO,EAA/B,EAAmC;AACjC,aAAOG,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BL,GAA1B,EAA+B,sBAA/B,EAAuD,0DAAvD,CAAP;AACD;;AAEDM,eAAWC,KAAX,CAAiB,kEAAjB,EAAoF,CAACN,EAAD,CAApF,EAA0F,UAASO,GAAT,EAAcC,IAAd,EAAoB;AAC5G,UAAID,GAAJ,EAAS;AACP,eAAOJ,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BL,GAA1B,EAA+B,sBAA/B,EAAuDQ,GAAvD,CAAP;AACD;AACD,UAAIE,eAAe;AACjBC,oBAAa;AADI,OAAnB;;AAIA,UAAIF,IAAJ,EAAU;AACR,YAAIA,KAAKG,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxBH,yBAAe;AACbC,wBAAYF,KAAKG,IAAL,CAAU,CAAV;AADC,WAAf;AAGD;AACF;;AAED,aAAOZ,IAAIc,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqBK,YAArB,CAAP;AACD,KAjBD;AAkBD;AAzCc,CAAjB","file":"ExpeditionController.js","sourcesContent":["/**\n * ExpeditionController\n *\n * @description :: Server-side logic for managing expeditions\n * @help        :: See http://sailsjs.org/#!/documentation/concepts/Controllers\n */\n\nmodule.exports = {\n/*\tcreate: function(req, res) {\n\t  Expedition.create(req.body).then(function(expedition) {\n\t    var responseData = {\n\t      expedition: expedition\n      }\n      return ResponseService.json(200, res, \"Expedition created successfully\", responseData)\n    }).catch(function (error) {\n        if (error.invalidAttributes){\n          return ResponseService.json(400, res, \"Expedition could not be created\", error.Errors)\n        }\n      }\n    )\n  } */\n\n  getCurrent: function(req, res) {\n    \n    var id = req.param('userId');\n    \n    if (id === undefined || id === '') {\n      return ResponseService.json(400, res, \"Error(s) encountered\", 'Parameter [userId] required..e.g. ../getCurrent?userId=1');\n    }\n\n    Expedition.query('SELECT * from expedition where \"EndDate\" is null and \"user\" = $1',[id], function(err, data) {\n      if (err) {\n        return ResponseService.json(400, res, \"Error(s) encountered\", err)\n      }\n      var responseData = {\n        expedition : {}\n      }\n      \n      if (data) {\n        if (data.rows.length > 0) {\n          responseData = {\n            expedition: data.rows[0]\n          }\n        }\n      }\n  \n      return res.status(200).json(responseData);\n    });\n  }\n};\n\n"]}