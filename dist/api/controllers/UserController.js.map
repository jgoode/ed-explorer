{"version":3,"sources":["../../../api/controllers/UserController.js"],"names":["_","require","module","exports","create","req","res","body","password","confirmPassword","ResponseService","json","allowedParameters","data","pick","User","then","user","responseData","token","JwtService","issue","id","catch","error","invalidAttributes","Errors"],"mappings":";;AAAA;;;;;;AAMA,IAAIA,IAAIC,QAAQ,QAAR,CAAR;;AAEAC,OAAOC,OAAP,GAAiB;AACfC,UAAQ,gBAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1B,QAAID,IAAIE,IAAJ,CAASC,QAAT,KAAsBH,IAAIE,IAAJ,CAASE,eAAnC,EAAoD;AAClD,aAAOC,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BL,GAA1B,EAA+B,wBAA/B,CAAP;AACD;;AAED,QAAIM,oBAAoB,CACtB,OADsB,EACb,UADa,EACD,WADC,CAAxB;;AAIA,QAAIC,OAAOb,EAAEc,IAAF,CAAOT,IAAIE,IAAX,EAAiBK,iBAAjB,CAAX;;AAEAG,SAAKX,MAAL,CAAYS,IAAZ,EAAkBG,IAAlB,CAAuB,UAAUC,IAAV,EAAgB;AACrC,UAAIC,eAAe;AACjBD,cAAMA,IADW;AAEjBE,eAAOC,WAAWC,KAAX,CAAiB,EAACC,IAAIL,KAAKK,EAAV,EAAjB;AAFU,OAAnB;AAIA,aAAOZ,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BL,GAA1B,EAA+B,2BAA/B,EAA4DY,YAA5D,CAAP;AACD,KAND,EAMGK,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtB,UAAIA,MAAMC,iBAAV,EAA4B;AAC1B,eAAOf,gBAAgBC,IAAhB,CAAqB,GAArB,EAA0BL,GAA1B,EAA+B,2BAA/B,EAA4DkB,MAAME,MAAlE,CAAP;AACD;AACF,KAVH;AAaD;AAzBc,CAAjB","file":"UserController.js","sourcesContent":["/**\n * UserController\n *\n * @description :: Server-side logic for managing users\n * @help        :: See http://sailsjs.org/#!/documentation/concepts/Controllers\n */\nvar _ = require('lodash');\n\nmodule.exports = {\n  create: function (req, res) {\n    if (req.body.password !== req.body.confirmPassword) {\n      return ResponseService.json(401, res, \"Password doesn't match\")\n    }\n    \n    var allowedParameters = [\n      \"email\", \"password\", \"commander\"\n    ]\n  \n    var data = _.pick(req.body, allowedParameters);\n    \n    User.create(data).then(function (user) {\n      var responseData = {\n        user: user,\n        token: JwtService.issue({id: user.id})\n      }\n      return ResponseService.json(200, res, \"User created successfully\", responseData)\n    }).catch(function (error) {\n        if (error.invalidAttributes){\n          return ResponseService.json(400, res, \"User could not be created\", error.Errors)\n        }\n      }\n    )\n    \n  }\n};\n\n"]}